import time
import random
import telebot
from pyowm import OWM
from telebot import types

# bot token from @BotFather 
token = '5289885170:AAGeVdIBnxB_2pNLBwh9kgcw5Ap3mLuxmRM'
bot = telebot.TeleBot(token)
answer = ['–î–∞ —è —Ç–∞–∫–æ–π! –ú–ª—è–∫-–º–ª—è–∫... üòã','–î–∞-–¥–∞-–¥–∞, —Ö–≤–∞–ª–∏—Ç–µ –º–µ–Ω—è... üòù','–ê —Å–∫–æ—Ä–æ —è –±—É–¥—É –µ—â—ë –∫—Ä—É—á–µ! ü§©','–ú–Ω–µ –ø—Ä–æ—Å—Ç–æ –ù–ï–¢ —Ä–∞–≤–Ω—ã—Ö! üòé','–°–ü–ê–°–ò–ë–û —è —Å—á–∞—Å—Ç–ª–∏–≤! üòÖ','–î–ê —è –≤–æ–æ–±—â–µ –û–ì–û–ù–¨! üî•']

# API KEY for pyowm 
owm = OWM('b75c1a1b026adea85db316994ee67a30')
mgr = owm.weather_manager()
city = None

@bot.message_handler(commands=['start'])
def welcome(message):
    sti = open('static/welcome.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)

    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üé≤ –ù–∞–∑–æ–≤–∏ —á–∏—Å–ª–æ –¥–Ω—è.")
    item2 = types.KeyboardButton("üòÄ –•–µ–π –±–æ—Ç —Ç—ã –∂–∏–≤–æ–π?!")
    markup.add(item1, item2)

    bot.send_message(message.chat.id, 
    "–†–∞–¥—É—à–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å {0.first_name}!\n–ú–æ—ë –∏–º—è <b>{1.first_name}</b> –∏ —è –±–æ—Ç, –±—É–¥–µ–º –∑–Ω–∞–∫–æ–º—ã.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.".
    format(message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup)
    bot.send_message(message.chat.id, 
    '–£ –º–µ–Ω—è –∏–º–µ–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–æ–±—â–∏—Ç—å –≤–∞–º —Å—É–ø–µ—Ä —Ç–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ. –¢–∞–∫–æ–≥–æ –≤–∞–º –Ω–µ —Å–æ–æ–±—â–∏—Ç –¥–∞–∂–µ Google!', 
    parse_mode='html', reply_markup=markup)

    time.sleep(4)
    # inline buttons
    markup = types.InlineKeyboardMarkup(row_width=3)
    Button1 = types.InlineKeyboardButton("–ë–∞–ª–∞—Ö–Ω–∞", callback_data='1')
    Button2 = types.InlineKeyboardButton("–î–æ–º–æ–¥–µ–¥–æ–≤–æ", callback_data='2')
    Button3 = types.InlineKeyboardButton("–ö–∞–ª—É–≥–∞", callback_data='3')
    Button4 = types.InlineKeyboardButton("–ö–∏—à–∏–Ω—ë–≤", callback_data='4')
    Button5 = types.InlineKeyboardButton("–ö—Ä–∞—Å–Ω–æ–≥–æ—Ä—Å–∫", callback_data='5')
    Button6 = types.InlineKeyboardButton("–ö—É—Ä—Å–∫", callback_data='6')
    Button7 = types.InlineKeyboardButton("–ú–æ—Å–∫–≤–∞", callback_data='7')
    Button8 = types.InlineKeyboardButton("–û—Ä–µ–Ω–±—É—Ä–≥", callback_data='8')
    Button9 = types.InlineKeyboardButton("–í–æ—Ä–æ–Ω–µ–∂", callback_data='9')
    markup.add(Button1, Button2, Button3, Button4, Button5, Button6, Button7, Button8, Button9)
    bot.send_message(message.chat.id, 
    '–Ø –±–µ—Ä—É –≤—Å–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –∏–∑ —Å–≤–µ—Ä—Ö—Å–µ–∫—Ä–µ—Ç–Ω–æ–π –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π —Å—Ç–∞–Ω—Ü–∏–∏. –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –µ–≥–æ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫–∞—è —Ç–∞–º —Å–µ–π—á–∞—Å –ø–æ–≥–æ–¥–∞.', 
    reply_markup=markup)

@bot.message_handler(content_types=['text'])
def talk(message):
    if message.chat.type == 'private':
        if message.text == 'üé≤ –ù–∞–∑–æ–≤–∏ —á–∏—Å–ª–æ –¥–Ω—è.':
            bot.send_message(message.chat.id, str(random.randint(1,9)))
        elif message.text == 'üòÄ –•–µ–π –±–æ—Ç —Ç—ã –∂–∏–≤–æ–π?!':
            bot.send_message(message.chat.id, '–î–∞ —è –∂–∏–≤–µ–µ –≤—Å–µ—Ö –∂–∏–≤—ã—Ö!!! üòú')
        elif message.text == "–ö—Ä—É—Ç–æ" or message.text == "–í–∞—É" or message.text == "–ö—Ä—É—Ç–æ!" or message.text == "–í–∞—É!" or message.text == "–í–∞—É! –ö—Ä—É—Ç–æ!" or message.text == "–¢—ã –∫—Ä—É—Ç–æ–π!" or message.text == "–¢—ã –∫—Ä—É—Ç–æ–π" or message.text == "–í–æ—Ç —ç—Ç–æ –¥–∞!" or message.text == '—Å—É–ø–µ—Ä':
                bot.send_message(message.chat.id, random.choice(answer))
        elif message.text == '–¢—ã –±–æ—Ç?' or message.text == "—Ç—ã –±–æ—Ç?" or message.text == '–¢—ã –∫—Ç–æ?' or message.text == "—Ç—ã –∫—Ç–æ?" or message.text == '–¢—ã –∫—Ç–æ —Ç–∞–∫–æ–π?' or message.text == '–ö—Ç–æ —Ç—ã —Ç–∞–∫–æ–π?' or message.text == "–ö—Ç–æ —Ç—ã?" or message.text == '–∫—Ç–æ —Ç—ã?':
            bot.send_message(message.chat.id, '–Ø –±–æ—Ç. Demetrios –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å. ü§∑‚Äç‚ôÇÔ∏è')
        elif message.text == '–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?' or message.text == "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å –¥–µ–ª–∞—Ç—å?" or message.text == '–ß—Ç–æ —Ç—ã –º–æ–∂–µ—à—å?':
                bot.send_message(message.chat.id, '–Ø —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤–∞—à–µ —á–∏—Å–ª–æ –¥–Ω—è. –°–∞–º–æ–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –∫–æ—Ç–æ—Ä–æ–µ —è –≤–∞–º –ø–æ–∫–∞–∂—É –∏ –±—É–¥–µ—Ç –≤–∞—à–∏–º —á–∏–ª–æ–º –¥–Ω—è.')
        elif message.text == '–±–æ—Ç' or message.text == "–±–æ—Ç?" or message.text == '–ë–æ—Ç' or message.text == "–ë–æ—Ç?":
            bot.send_message(message.chat.id, '–ß—Ç–æ —Ç–∞–∫–æ–µ? –ì–æ—Ç–æ–≤ –±—ã—Ç—å –≤–∞–º —á–µ–º-—Ç–æ –ø–æ–ª–µ–∑–Ω—ã–º. üòâ')        
        else:
            # bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –≤–∞–º –æ—Ç–≤–µ—Ç–∏—Ç—å. üò¢')
            bot.send_message(message.chat.id, '–ò–∑–¥–µ–≤–∞–µ—Ç–µ—Å—å –Ω–∞–¥–æ –º–Ω–æ–π –¥–∞?!')
            time.sleep(3)
            bot.send_message(message.chat.id, 'Ok! –¢–æ–≥–¥–∞ —è –≤—Å—ë-–≤—Å—ë –∑–∞ –≤–∞–º–∏ –±—É–¥—É –ø–æ–≤—Ç–æ—Ä—è—Ç—å! üòù')
            time.sleep(3)
            bot.send_message(message.chat.id, '–í–æ—Ç –≤—Å—ë —Ç–æ, —á—Ç–æ –≤—ã –º–Ω–µ –ø–∏—Å–∞–ª–∏:')
            bot.send_message(message.chat.id, message.text)
            bot.send_message(message.chat.id, message.text)
            bot.send_message(message.chat.id, message.text)
            time.sleep(2)
            bot.send_message(message.chat.id, 'üëπ —Ö–∏-—Ö–∏-—Ö–∏...')
            time.sleep(2)
            # inline buttons
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–î–∞, —è –±–æ—é—Å—å.", callback_data='Ok')
            item2 = types.InlineKeyboardButton("–ù–µ –¥–µ–ª–∞–π —Ç–∞–∫.", callback_data='No')
            markup.add(item1, item2)
            bot.send_message(message.chat.id, '–£ –º–µ–Ω—è –±–æ–ª—å—à–µ! –°—Ç—Ä–∞—à–Ω–æ?!', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'Ok':
                bot.send_message(call.message.chat.id, '–í–æ—Ç —Ç–∞–∫ —Ç–æ! –ë–æ–π—Ç–µ—Å—å –º–µ–Ω—è! üòà')
            elif call.data == 'No':
                bot.send_message(call.message.chat.id, '–ù—É —è —Ç–æ –∑–ª–æ–±–Ω–µ–Ω—å–∫–∏–π! –ò –∫–æ–Ω–µ—á–Ω–æ —è –±—É–¥—É —Ç–∞–∫ –¥–µ–ª–∞—Ç—å! üëπ')
            elif call.data == '1':
                city = '–ë–∞–ª–∞—Ö–Ω–∞'
            elif call.data == '2':
                city = '–î–æ–º–æ–¥–µ–¥–æ–≤–æ'
            elif call.data == '3':
                city = '–ö–∞–ª—É–≥–∞'
            elif call.data == '4':
                city = '–ö–∏—à–∏–Ω—ë–≤'
            elif call.data == '5':
                city = '–ö—Ä–∞—Å–Ω–æ–≥–æ—Ä—Å–∫'
            elif call.data == '6':
                city = '–ö—É—Ä—Å–∫'
            elif call.data == '7':
                city = '–ú–æ—Å–∫–≤–∞'
            elif call.data == '8':
                city = '–û—Ä–µ–Ω–±—É—Ä–≥'
            elif call.data == '9':
                city = '–í–æ—Ä–æ–Ω–µ–∂'

            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–£ –º–µ–Ω—è –±–æ–ª—å—à–µ! –°—Ç—Ä–∞—à–Ω–æ?!",
            reply_markup=None)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–Ø –±–µ—Ä—É –≤—Å–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –∏–∑ —Å–≤–µ—Ä—Ö—Å–µ–∫—Ä–µ—Ç–Ω–æ–π –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π —Å—Ç–∞–Ω—Ü–∏–∏. –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –µ–≥–æ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫–∞—è —Ç–∞–º —Å–µ–π—á–∞—Å –ø–æ–≥–æ–¥–∞.",
            reply_markup=None)
 
            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–í–∞—à –æ—Ç–≤–µ—Ç –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")

        observation = mgr.weather_at_place(city)
        w = observation.weather

        # {'temp_max': 10.5, 'temp': 9.7, 'temp_min': 9.0} - –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤ —Å–ª–æ–≤–∞—Ä–µ
        # - —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å Python (–º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö, –≥–¥–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –ø–∞—Ä—ã - –∫–ª—é—á: '–∑–Ω–∞—á–µ–Ω–∏–µ')
        # - –∏ –¥–∞–ª–µ–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ –∫–∞–∫ –≤—ã—Ç–∞—â–∏—Ç—å –Ω—É–∂–Ω–æ–µ –Ω–∞–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Å–ª–æ–≤–∞—Ä—è Python
        # temperature1 = w.temperature('celsius')['temp_max']
        temperature2 = w.temperature('celsius')['temp']
        # temperature3 = w.temperature('celsius')['temp_min']
        wind = w.wind()['speed'] # {'speed': 4.6, 'deg': 330}
        humidity = w.humidity # 87% (as a percentage)
        clouds = w.clouds # 75% (as a percentage)
        detailed_status = w.detailed_status # 'clouds'
        hPa = w.pressure['press']
        mmHg = hPa * 0.75006375541921
        mmHg = round(mmHg, 1)

        if detailed_status == 'overcast clouds':
            detailed_status = '—Å–ø–ª–æ—à–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å'
        elif detailed_status == 'broken clouds':
            detailed_status = '—Ä–∞—Å—Å–µ—è–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å'
        elif detailed_status == 'clear sky':
            detailed_status = '—á–∏—Å—Ç–æ–µ –Ω–µ–±–æ'
        elif detailed_status == 'few clouds':
            detailed_status = '–∏–º–µ–µ—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±–ª–∞–∫–æ–≤' 
        elif detailed_status == 'light intensity shower rain': 
            detailed_status = '–Ω–µ–±–æ–ª—å—à–æ–π –ª–∏–≤–µ–Ω—å'
        elif detailed_status == 'dust':
            detailed_status = '–≤–µ—Å—å–º–∞ –ø—ã–ª—å–Ω–æ'
        elif detailed_status == 'scattered clouds':
            detailed_status = '–∏–º–µ—é—Ç—Å—è —Ä–∞–∑–±—Ä–æ—Å–∞–Ω–Ω—ã–µ –æ–±–ª–∞–∫–∞'
        elif detailed_status == 'shower rain':
            detailed_status = '–ª–∏–≤–µ–Ω—å'
        elif detailed_status == 'mist':
            detailed_status = '—Ç—É–º–∞–Ω'
        elif detailed_status == 'light rain':
            detailed_status = '–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å'
        elif detailed_status == 'light snow':
            detailed_status = '–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥'

        # bot.send_message(call.from_user.id, "–í –≥–æ—Ä–æ–¥–µ " + city + " —Å–µ–π—á–∞—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + str(temperature1) + "–°¬∞")
        bot.send_message(call.from_user.id, "–í –≥–æ—Ä–æ–¥–µ " + city + " —Å–µ–π—á–∞—Å —Å—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + str(temperature2) + " –°¬∞")
        # bot.send_message(call.from_user.id, "–í –≥–æ—Ä–æ–¥–µ " + city + " —Å–µ–π—á–∞—Å –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + str(temperature3) + "–°¬∞")
        bot.send_message(call.from_user.id, "–í –≥–æ—Ä–æ–¥–µ " + city + " —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ —Å–µ–π—á–∞—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(wind) + " –º/—Å")
        bot.send_message(call.from_user.id, "–í –≥–æ—Ä–æ–¥–µ " + city + " –≤–ª–∞–∂–Ω–æ—Å—Ç—å —Å–µ–π—á–∞—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(humidity) + "%")
        bot.send_message(call.from_user.id, "–í –≥–æ—Ä–æ–¥–µ " + city + " –æ–±–ª–∞—á–Ω–æ—Å—Ç—å —Å–µ–π—á–∞—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(clouds) + "%")
        bot.send_message(call.from_user.id, "–í –≥–æ—Ä–æ–¥–µ " + city + " —Å–µ–π—á–∞—Å: " + str(detailed_status))
        bot.send_message(call.from_user.id, "–í –≥–æ—Ä–æ–¥–µ " + city + " –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ —Å–µ–π—á–∞—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(mmHg) + " –º–º —Ä—Ç.—Å—Ç.")

    except UnboundLocalError as e:
        pass
# RUN
bot.polling(non_stop=True)
 
  